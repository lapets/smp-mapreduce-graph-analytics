A breakdown of the tasks for building graphs from a random source:
* review the definition of a random graphs (https://en.wikipedia.org/wiki/Random_graph);
* implement a small Python function that can produce a random graph (in which each edge exists with some probability p, specified as a parameter) as a list of tuples of the form {('a','b'),('b','c')});
* look up a Python library like NetworkX (https://networkx.github.io/) and try producing various graphs in the same format using this library (some conversion might be necessary);
* investigate what other kinds of graphs the library can produce randomly (e.g., http://networkx.readthedocs.org/en/networkx-1.10/reference/generators.html#module-networkx.generators.random_graphs) and identify some potentially interesting ones;
A breakdown of the tasks for building graphs from a data set based on internet topology data:
* write a Python script that uses the urllib library (https://docs.python.org/3/library/urllib.request.html) to retrieve all the data in a data set that has all the edges between individual ASs (http://data.caida.org/datasets/topology/ark/ipv4/as-links/);
* write a Python script to convert the above data into a more friendly format for our purposes (something like a set of tuples, as before).